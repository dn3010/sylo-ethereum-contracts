version: 2

jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/sylo-ethereum-contracts
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm-install
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: build contracts
          command: npm run build
      - run:
          name: prepare outputs
          command: node ./scripts/parseArtifacts.js
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/sylo-ethereum-contracts

  test-node:
    docker:
      - image: circleci/node:10
    working_directory: ~/sylo-ethereum-contracts
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: test contracts
          command: npm test

      - run:
          name: prepare outputs
          command: node ./scripts/parseArtifacts.js

  test-coverage:
    docker:
      - image: circleci/node:10
    working_directory: ~/sylo-ethereum-contracts
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: test contracts
          command: npm run coverage
      - store_artifacts:
            path: ~/sylo-ethereum-contracts/coverage
          
  test-go-client:
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-pkg-cache={{ checksum "go-eth/go.sum" }}
      - run:
          name: run tests
          command: |
            cd ~/project/go-eth
            go test ./...
      - save_cache:
          key: go-pkg-cache={{ checksum "go-eth/go.sum" }}
          paths: $GOPATH/pkg

workflows:
  build-and-test:
    jobs:
      - build
      - test-node:
          requires:
            - build
      - test-coverage:
          requires:
            - test-node
      - test-go-client
  version: 2
