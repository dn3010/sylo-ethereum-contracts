// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SyloTicketingTicket is an auto generated low-level Go binding around an user-defined struct.
type SyloTicketingTicket struct {
	EpochId         [32]byte
	Sender          common.Address
	Redeemer        common.Address
	GenerationBlock *big.Int
	SenderCommit    [32]byte
	RedeemerCommit  [32]byte
}

// SyloTicketingABI is the input ABI used to generate the binding from.
const SyloTicketingABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"escrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"rewardPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedTickets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contractListings\",\"name\":\"listings\",\"type\":\"address\"},{\"internalType\":\"contractDirectory\",\"name\":\"directory\",\"type\":\"address\"},{\"internalType\":\"contractEpochsManager\",\"name\":\"epochsManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_unlockDuration\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newUnlockDuration\",\"type\":\"uint256\"}],\"name\":\"setUnlockDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositPenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"epochId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"generationBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"senderCommit\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"redeemerCommit\",\"type\":\"bytes32\"}],\"internalType\":\"structSyloTicketing.Ticket\",\"name\":\"ticket\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"senderRand\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemerRand\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"epochId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"generationBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"senderCommit\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"redeemerCommit\",\"type\":\"bytes32\"}],\"internalType\":\"structSyloTicketing.Ticket\",\"name\":\"ticket\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"directoryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"defaultPayoutPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"faceValue\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"baseLiveWinProb\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"expiredWinProb\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"ticketDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"decayRate\",\"type\":\"uint16\"}],\"internalType\":\"structEpochsManager.Epoch\",\"name\":\"epoch\",\"type\":\"tuple\"}],\"name\":\"calculateWinningProbability\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"epochId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"generationBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"senderCommit\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"redeemerCommit\",\"type\":\"bytes32\"}],\"internalType\":\"structSyloTicketing.Ticket\",\"name\":\"ticket\",\"type\":\"tuple\"}],\"name\":\"getTicketHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"epochId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"stakee\",\"type\":\"address\"}],\"name\":\"getRewardPoolKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"epochId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"stakee\",\"type\":\"address\"}],\"name\":\"getRewardPoolTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"epochId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"stakee\",\"type\":\"address\"}],\"name\":\"getRewardPoolClaimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"epochId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"stakee\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// SyloTicketingBin is the compiled bytecode used for deploying new contracts.
var SyloTicketingBin = "0x608060405234801561001057600080fd5b5061284c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638da5cb5b116100d8578063dd9007691161008c578063f7013ef611610066578063f7013ef614610325578063f9d0ff0614610338578063fc7e286d1461034b57600080fd5b8063dd900769146102ec578063f137ef17146102ff578063f2fde38b1461031257600080fd5b8063cdba7342116100bd578063cdba7342146102be578063d088a231146102d1578063da95b5c9146102d957600080fd5b80638da5cb5b14610290578063c68264af146102ab57600080fd5b80635d9c846e1161013a5780637d6babb4116101145780637d6babb41461026c578063844556ca146102745780638a1fcd601461028757600080fd5b80635d9c846e1461023e578063715018a61461025157806372b0d90c1461025957600080fd5b80633894e71d1161016b5780633894e71d146101cf5780633ccfd60b1461020357806359a515ba1461020b57600080fd5b8063169e1ca8146101875780632073de5c1461019c575b600080fd5b61019a610195366004612584565b610395565b005b6101bc6101aa3660046121ec565b606c6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101e26101dd36600461241e565b6104c7565b6040516fffffffffffffffffffffffffffffffff90911681526020016101c6565b61019a610545565b61022e6102193660046121ec565b606b6020526000908152604090205460ff1681565b60405190151581526020016101c6565b6101bc61024c366004612204565b610550565b61019a61059e565b61019a6102673660046120e3565b610602565b6101bc610714565b6101bc610282366004612204565b6107ee565b6101bc60695481565b6033546040516001600160a01b0390911681526020016101c6565b6101bc6102b9366004612204565b610816565b61019a6102cc366004612584565b610c9a565b61019a610d18565b61019a6102e73660046124ea565b610d82565b61019a6102fa3660046121ec565b61119e565b6101bc61030d366004612403565b6111fd565b61019a6103203660046120e3565b611284565b61019a610333366004612233565b611366565b61019a610346366004612204565b61148d565b61037a6103593660046120e3565b606a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101c6565b6001600160a01b0381166000908152606a602052604090206002810154156104045760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206465706f736974207768696c6520756e6c6f636b696e67000060448201526064015b60405180910390fd5b828160000160008282546104189190612681565b90915550506065546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064015b602060405180830381600087803b15801561048957600080fd5b505af115801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c191906121d2565b50505050565b6000808360600151436104da9190612749565b905082610100015181106104f257600091505061053f565b60006105078460c001518561012001516115b0565b90506000846101000151838361051d91906126de565b61052791906126be565b9050808560c0015161053991906126fd565b93505050505b92915050565b61054e33610602565b565b6000828260405160200161058092919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905092915050565b6033546001600160a01b031633146105f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fb565b61054e60006115e6565b336000908152606a6020526040902060028101546106625760405162461bcd60e51b815260206004820152601560248201527f4465706f73697473206e6f7420756e6c6f636b6564000000000000000000000060448201526064016103fb565b438160020154106106b55760405162461bcd60e51b815260206004820152601a60248201527f556e6c6f636b20706572696f64206e6f7420636f6d706c65746500000000000060448201526064016103fb565b600181015481546000916106c891612681565b600080845560018401819055600284015560655460405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905292935091169063a9059cbb9060440161046f565b336000908152606a602052604081208054151580610736575060008160010154115b6107825760405162461bcd60e51b815260206004820152601360248201527f4e6f7468696e6720746f2077697468647261770000000000000000000000000060448201526064016103fb565b6002810154156107d45760405162461bcd60e51b815260206004820152601a60248201527f556e6c6f636b20616c726561647920696e2070726f677265737300000000000060448201526064016103fb565b6069546107e19043612681565b6002909101819055919050565b6000606c60006107fe8585610550565b81526020810191909152604001600020549392505050565b606854604051637e6d64a560e01b81526004810184905260009182916001600160a01b0390911690637e6d64a5906024016101406040518083038186803b15801561086057600080fd5b505afa158015610874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108989190612296565b80519091506108e95760405162461bcd60e51b815260206004820152601460248201527f45706f636820646f6573206e6f7420657869737400000000000000000000000060448201526064016103fb565b6000606c60006108f98787610550565b81526020808201929092526040908101600090812033825260018101909352908120548254929350909161092d9190612749565b905080610940576000935050505061053f565b60675460608401516040516301fd05a360e41b815260048101919091526001600160a01b0387811660248301526000921690631fd05a309060440160006040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109cf91908101906120ff565b905060008060005b8351811015610a7557336001600160a01b0316848281518110610a0a57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03161415610a2a57600191505b838181518110610a4a57634e487b7160e01b600052603260045260246000fd5b60200260200101516020015183610a619190612681565b925080610a6d8161278c565b9150506109d7565b508080610a8a5750336001600160a01b038916145b610afc5760405162461bcd60e51b815260206004820152603960248201527f4d75737420626520612064656c656761746564207374616b6572206f7220746860448201527f65207374616b656520746f20636c61696d20726577617264730000000000000060648201526084016103fb565b60008211610b725760405162461bcd60e51b815260206004820152602e60248201527f5469636b65742072656465656d6572206d7573742068617665207374616b652060448201527f666f7220746869732065706f636800000000000000000000000000000000000060648201526084016103fb565b6000610b828588608001516115b0565b90506000805b8551811015610c5257336001600160a01b0316868281518110610bbb57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03161415610c405760008584888481518110610bfa57634e487b7160e01b600052603260045260246000fd5b602002602001015160200151610c1091906126de565b610c1a91906126be565b9050610c268184612681565b9250336001600160a01b038d1614610c3e5750610c52565b505b80610c4a8161278c565b915050610b88565b50336001600160a01b038b161415610c8c57610c7f868960800151612710610c7a919061272e565b6115b0565b610c899082612681565b90505b9a9950505050505050505050565b6001600160a01b0381166000908152606a60205260409020600281015415610d045760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206465706f736974207768696c6520756e6c6f636b696e67000060448201526064016103fb565b828160010160008282546104189190612681565b336000908152606a602052604090206002810154610d785760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420756e6c6f636b696e672c2063616e6e6f74206c6f636b00000000000060448201526064016103fb565b6000600290910155565b6068548451604051637e6d64a560e01b815260048101919091526000916001600160a01b031690637e6d64a5906024016101406040518083038186803b158015610dcb57600080fd5b505afa158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190612296565b8051909150610e7a5760405162461bcd60e51b815260206004820152602860248201527f5469636b65742773206173736f6369617465642065706f636820646f6573206e60448201527f6f7420657869737400000000000000000000000000000000000000000000000060648201526084016103fb565b8051606086015110801590610ea957506000816040015111610e9d576001610ea9565b80604001518560600151105b610f1b5760405162461bcd60e51b815260206004820152603a60248201527f54686973207469636b657420776173206e6f742067656e65726174656420647560448201527f72696e672069742773206173736f6369617465642065706f636800000000000060648201526084016103fb565b6000610f26866111fd565b9050610f36868287878787611650565b60665460408781015190517f084af0b20000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600092919091169063084af0b29060240160006040518083038186803b158015610f9d57600080fd5b505afa158015610fb1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fd99190810190612333565b90508060600151151560011515146110595760405162461bcd60e51b815260206004820152602960248201527f5469636b65742072656465656d6572206d757374206861766520612076616c6960448201527f64206c697374696e67000000000000000000000000000000000000000000000060648201526084016103fb565b6000828152606b6020526040808220805460ff1916600117905560675460608601518a83015192516301fd05a360e41b81526001600160a01b0390921692631fd05a30926110bd9291906004019182526001600160a01b0316602082015260400190565b60006040518083038186803b1580156110d557600080fd5b505afa1580156110e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261111191908101906120ff565b9050600081511161118a5760405162461bcd60e51b815260206004820152602e60248201527f5469636b65742072656465656d6572206d7573742068617665207374616b652060448201527f666f7220746869732065706f636800000000000000000000000000000000000060648201526084016103fb565b6111948489611986565b5050505050505050565b6033546001600160a01b031633146111f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fb565b606955565b80516020808301516040808501516060860151608087015160a08801519351600097611267979096959101958652606094851b6bffffffffffffffffffffffff1990811660208801529390941b909216603485015260488401526068830152608882015260a80190565b604051602081830303815290604052805190602001209050919050565b6033546001600160a01b031633146112de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fb565b6001600160a01b03811661135a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103fb565b611363816115e6565b50565b600054610100900460ff168061137f575060005460ff16155b6113e25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103fb565b600054610100900460ff16158015611404576000805461ffff19166101011790555b61140c611a8d565b606580546001600160a01b038089167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179092556066805488841690831617905560678054878416908316179055606880549286169290911691909117905560698290558015611485576000805461ff00191690555b505050505050565b6000606c600061149d8585610550565b8152602001908152602001600020905060006114b98484610816565b90506000811161150b5760405162461bcd60e51b815260206004820152601760248201527f416363756d616c6174656420726577617264206973203000000000000000000060448201526064016103fb565b81543360008181526001850160205260409081902092909255606554915163a9059cbb60e01b81526004810191909152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561157157600080fd5b505af1158015611585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a991906121d2565b5050505050565b60006127106115d561ffff84166fffffffffffffffffffffffffffffffff86166126de565b6115df91906126be565b9392505050565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60208601516001600160a01b03166116aa5760405162461bcd60e51b815260206004820152601560248201527f5469636b65742073656e646572206973206e756c6c000000000000000000000060448201526064016103fb565b60408601516001600160a01b03166117045760405162461bcd60e51b815260206004820152601760248201527f5469636b65742072656465656d6572206973206e756c6c00000000000000000060448201526064016103fb565b6000858152606b602052604090205460ff16156117635760405162461bcd60e51b815260206004820152601760248201527f5469636b657420616c72656164792072656465656d656400000000000000000060448201526064016103fb565b608086015160408051602081018790520160405160208183030381529060405280519060200120146117fd5760405162461bcd60e51b815260206004820152602f60248201527f48617368206f662073656e64657252616e6420646f65736e2774206d6174636860448201527f2073656e64657252616e6448617368000000000000000000000000000000000060648201526084016103fb565b60a086015160408051602081018690520160405160208183030381529060405280519060200120146118975760405162461bcd60e51b815260206004820152603360248201527f48617368206f662072656465656d657252616e6420646f65736e2774206d617460448201527f63682072656465656d657252616e64486173680000000000000000000000000060648201526084016103fb565b6118a682876020015187611b4f565b6119185760405162461bcd60e51b815260206004820152602560248201527f5469636b657420646f65736e2774206861766520612076616c6964207369676e60448201527f617475726500000000000000000000000000000000000000000000000000000060648201526084016103fb565b600061192487836104c7565b9050611931838583611b77565b61197d5760405162461bcd60e51b815260206004820152601660248201527f5469636b6574206973206e6f7420612077696e6e65720000000000000000000060448201526064016103fb565b50505050505050565b60006119aa82602001516001600160a01b03166000908152606a6020526040902090565b905080600001548360a001511115611a70576119d482600001518360400151838460000154611bdd565b606554600182015460405163a9059cbb60e01b815261dead600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015611a2857600080fd5b505af1158015611a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6091906121d2565b5060008082556001820155505050565b611a8882600001518360400151838660a00151611bdd565b505050565b600054610100900460ff1680611aa6575060005460ff16155b611b095760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103fb565b600054610100900460ff16158015611b2b576000805461ffff19166101011790555b611b33611c9e565b611b3b611d4f565b8015611363576000805461ff001916905550565b6000826001600160a01b0316611b658386611df6565b6001600160a01b031614949350505050565b600080826fffffffffffffffffffffffffffffffff166080846fffffffffffffffffffffffffffffffff16901b179050808585604051602001611bbb929190612596565b60408051601f1981840301815291905280516020909101201095945050505050565b8154811115611c545760405162461bcd60e51b815260206004820152603260248201527f5370656e64657220646f6573206e6f74206861766520656e6f75676820746f2060448201527f7472616e7366657220746f20726577617264000000000000000000000000000060648201526084016103fb565b8154611c61908290612749565b82556000611c6f8585610550565b6000818152606c6020526040812080549293508492909190611c92908490612681565b90915550505050505050565b600054610100900460ff1680611cb7575060005460ff16155b611d1a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103fb565b600054610100900460ff16158015611b3b576000805461ffff19166101011790558015611363576000805461ff001916905550565b600054610100900460ff1680611d68575060005460ff16155b611dcb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103fb565b600054610100900460ff16158015611ded576000805461ffff19166101011790555b611b3b336115e6565b60008151604114611e495760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103fb565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115611ed65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103fb565b601b8160ff161015611ef057611eed601b82612699565b90505b8060ff16601b14158015611f0857508060ff16601c14155b15611f605760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103fb565b6040805160008082526020820180845289905260ff841692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611fb4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105395760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103fb565b8051801515811461202757600080fd5b919050565b600060c0828403121561203d578081fd5b60405160c0810181811067ffffffffffffffff82111715612060576120606127bd565b604052823581529050806020830135612078816127d3565b6020820152604083013561208b816127d3565b80604083015250606083013560608201526080830135608082015260a083013560a08201525092915050565b8035612027816127e8565b8051612027816127e8565b803561202781612806565b805161202781612806565b6000602082840312156120f4578081fd5b81356115df816127d3565b60006020808385031215612111578182fd5b825167ffffffffffffffff80821115612128578384fd5b818501915085601f83011261213b578384fd5b81518181111561214d5761214d6127bd565b61215b848260051b01612628565b8181528481019250838501600683901b8501860189101561217a578687fd5b8694505b828510156121c657604080828b031215612196578788fd5b61219e6125b8565b82516121a9816127d3565b81528288015188820152855260019590950194938601930161217e565b50979650505050505050565b6000602082840312156121e3578081fd5b6115df82612017565b6000602082840312156121fd578081fd5b5035919050565b60008060408385031215612216578081fd5b823591506020830135612228816127d3565b809150509250929050565b600080600080600060a0868803121561224a578081fd5b8535612255816127d3565b94506020860135612265816127d3565b93506040860135612275816127d3565b92506060860135612285816127d3565b949793965091946080013592915050565b600061014082840312156122a8578081fd5b6122b06125e1565b825181526020830151602082015260408301516040820152606083015160608201526122de608084016120d8565b608082015260a083015160a08201526122f960c084016120c2565b60c082015261230a60e084016120c2565b60e082015261010083810151908201526101206123288185016120d8565b908201529392505050565b60006020808385031215612345578182fd5b825167ffffffffffffffff8082111561235c578384fd5b908401906080828703121561236f578384fd5b612377612605565b825182811115612385578586fd5b83019150601f82018713612397578485fd5b81516123aa6123a582612659565b612628565b81815288868386010111156123bd578687fd5b6123cc82878301888701612760565b8252506123da8385016120d8565b84820152604083015160408201526123f460608401612017565b60608201529695505050505050565b600060c08284031215612414578081fd5b6115df838361202c565b600080828403610200811215612432578283fd5b61243c858561202c565b92506101408060bf1983011215612451578283fd5b6124596125e1565b915060c0850135825260e0850135602083015261010080860135604084015261012080870135606085015261248f8388016120cd565b608085015261016087013560a08501526124ac61018088016120b7565b60c08501526124be6101a088016120b7565b60e08501526101c0870135828501526124da6101e088016120cd565b9084015250929590945092505050565b6000806000806101208587031215612500578182fd5b61250a868661202c565b935060c0850135925060e0850135915061010085013567ffffffffffffffff811115612534578182fd5b8501601f81018713612544578182fd5b80356125526123a582612659565b818152886020838501011115612566578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060408385031215612216578182fd5b600083516125a8818460208801612760565b9190910191825250602001919050565b6040805190810167ffffffffffffffff811182821017156125db576125db6127bd565b60405290565b604051610140810167ffffffffffffffff811182821017156125db576125db6127bd565b6040516080810167ffffffffffffffff811182821017156125db576125db6127bd565b604051601f8201601f1916810167ffffffffffffffff81118282101715612651576126516127bd565b604052919050565b600067ffffffffffffffff821115612673576126736127bd565b50601f01601f191660200190565b60008219821115612694576126946127a7565b500190565b600060ff821660ff84168060ff038211156126b6576126b66127a7565b019392505050565b6000826126d957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156126f8576126f86127a7565b500290565b60006fffffffffffffffffffffffffffffffff83811690831681811015612726576127266127a7565b039392505050565b600061ffff83811690831681811015612726576127266127a7565b60008282101561275b5761275b6127a7565b500390565b60005b8381101561277b578181015183820152602001612763565b838111156104c15750506000910152565b60006000198214156127a0576127a06127a7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461136357600080fd5b6fffffffffffffffffffffffffffffffff8116811461136357600080fd5b61ffff8116811461136357600080fdfea2646970667358221220a00e7b8edd7efb477b9e411715c6e3997706ad10d96bd045c2a4f1f4d965b6b964736f6c63430008040033"

// DeploySyloTicketing deploys a new Ethereum contract, binding an instance of SyloTicketing to it.
func DeploySyloTicketing(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SyloTicketing, error) {
	parsed, err := abi.JSON(strings.NewReader(SyloTicketingABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SyloTicketingBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SyloTicketing{SyloTicketingCaller: SyloTicketingCaller{contract: contract}, SyloTicketingTransactor: SyloTicketingTransactor{contract: contract}, SyloTicketingFilterer: SyloTicketingFilterer{contract: contract}}, nil
}

// SyloTicketing is an auto generated Go binding around an Ethereum contract.
type SyloTicketing struct {
	SyloTicketingCaller     // Read-only binding to the contract
	SyloTicketingTransactor // Write-only binding to the contract
	SyloTicketingFilterer   // Log filterer for contract events
}

// SyloTicketingCaller is an auto generated read-only Go binding around an Ethereum contract.
type SyloTicketingCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SyloTicketingTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SyloTicketingTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SyloTicketingFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SyloTicketingFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SyloTicketingSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SyloTicketingSession struct {
	Contract     *SyloTicketing    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SyloTicketingCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SyloTicketingCallerSession struct {
	Contract *SyloTicketingCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// SyloTicketingTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SyloTicketingTransactorSession struct {
	Contract     *SyloTicketingTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// SyloTicketingRaw is an auto generated low-level Go binding around an Ethereum contract.
type SyloTicketingRaw struct {
	Contract *SyloTicketing // Generic contract binding to access the raw methods on
}

// SyloTicketingCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SyloTicketingCallerRaw struct {
	Contract *SyloTicketingCaller // Generic read-only contract binding to access the raw methods on
}

// SyloTicketingTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SyloTicketingTransactorRaw struct {
	Contract *SyloTicketingTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSyloTicketing creates a new instance of SyloTicketing, bound to a specific deployed contract.
func NewSyloTicketing(address common.Address, backend bind.ContractBackend) (*SyloTicketing, error) {
	contract, err := bindSyloTicketing(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SyloTicketing{SyloTicketingCaller: SyloTicketingCaller{contract: contract}, SyloTicketingTransactor: SyloTicketingTransactor{contract: contract}, SyloTicketingFilterer: SyloTicketingFilterer{contract: contract}}, nil
}

// NewSyloTicketingCaller creates a new read-only instance of SyloTicketing, bound to a specific deployed contract.
func NewSyloTicketingCaller(address common.Address, caller bind.ContractCaller) (*SyloTicketingCaller, error) {
	contract, err := bindSyloTicketing(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SyloTicketingCaller{contract: contract}, nil
}

// NewSyloTicketingTransactor creates a new write-only instance of SyloTicketing, bound to a specific deployed contract.
func NewSyloTicketingTransactor(address common.Address, transactor bind.ContractTransactor) (*SyloTicketingTransactor, error) {
	contract, err := bindSyloTicketing(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SyloTicketingTransactor{contract: contract}, nil
}

// NewSyloTicketingFilterer creates a new log filterer instance of SyloTicketing, bound to a specific deployed contract.
func NewSyloTicketingFilterer(address common.Address, filterer bind.ContractFilterer) (*SyloTicketingFilterer, error) {
	contract, err := bindSyloTicketing(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SyloTicketingFilterer{contract: contract}, nil
}

// bindSyloTicketing binds a generic wrapper to an already deployed contract.
func bindSyloTicketing(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SyloTicketingABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SyloTicketing *SyloTicketingRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SyloTicketing.Contract.SyloTicketingCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SyloTicketing *SyloTicketingRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SyloTicketing.Contract.SyloTicketingTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SyloTicketing *SyloTicketingRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SyloTicketing.Contract.SyloTicketingTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SyloTicketing *SyloTicketingCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SyloTicketing.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SyloTicketing *SyloTicketingTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SyloTicketing.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SyloTicketing *SyloTicketingTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SyloTicketing.Contract.contract.Transact(opts, method, params...)
}

// CalculateWinningProbability is a free data retrieval call binding the contract method 0x3894e71d.
//
// Solidity: function calculateWinningProbability((bytes32,address,address,uint256,bytes32,bytes32) ticket, (uint256,uint256,uint256,bytes32,uint16,uint256,uint128,uint128,uint256,uint16) epoch) view returns(uint128)
func (_SyloTicketing *SyloTicketingCaller) CalculateWinningProbability(opts *bind.CallOpts, ticket SyloTicketingTicket, epoch EpochsManagerEpoch) (*big.Int, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "calculateWinningProbability", ticket, epoch)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CalculateWinningProbability is a free data retrieval call binding the contract method 0x3894e71d.
//
// Solidity: function calculateWinningProbability((bytes32,address,address,uint256,bytes32,bytes32) ticket, (uint256,uint256,uint256,bytes32,uint16,uint256,uint128,uint128,uint256,uint16) epoch) view returns(uint128)
func (_SyloTicketing *SyloTicketingSession) CalculateWinningProbability(ticket SyloTicketingTicket, epoch EpochsManagerEpoch) (*big.Int, error) {
	return _SyloTicketing.Contract.CalculateWinningProbability(&_SyloTicketing.CallOpts, ticket, epoch)
}

// CalculateWinningProbability is a free data retrieval call binding the contract method 0x3894e71d.
//
// Solidity: function calculateWinningProbability((bytes32,address,address,uint256,bytes32,bytes32) ticket, (uint256,uint256,uint256,bytes32,uint16,uint256,uint128,uint128,uint256,uint16) epoch) view returns(uint128)
func (_SyloTicketing *SyloTicketingCallerSession) CalculateWinningProbability(ticket SyloTicketingTicket, epoch EpochsManagerEpoch) (*big.Int, error) {
	return _SyloTicketing.Contract.CalculateWinningProbability(&_SyloTicketing.CallOpts, ticket, epoch)
}

// Deposits is a free data retrieval call binding the contract method 0xfc7e286d.
//
// Solidity: function deposits(address ) view returns(uint256 escrow, uint256 penalty, uint256 unlockAt)
func (_SyloTicketing *SyloTicketingCaller) Deposits(opts *bind.CallOpts, arg0 common.Address) (struct {
	Escrow   *big.Int
	Penalty  *big.Int
	UnlockAt *big.Int
}, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "deposits", arg0)

	outstruct := new(struct {
		Escrow   *big.Int
		Penalty  *big.Int
		UnlockAt *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Escrow = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Penalty = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.UnlockAt = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Deposits is a free data retrieval call binding the contract method 0xfc7e286d.
//
// Solidity: function deposits(address ) view returns(uint256 escrow, uint256 penalty, uint256 unlockAt)
func (_SyloTicketing *SyloTicketingSession) Deposits(arg0 common.Address) (struct {
	Escrow   *big.Int
	Penalty  *big.Int
	UnlockAt *big.Int
}, error) {
	return _SyloTicketing.Contract.Deposits(&_SyloTicketing.CallOpts, arg0)
}

// Deposits is a free data retrieval call binding the contract method 0xfc7e286d.
//
// Solidity: function deposits(address ) view returns(uint256 escrow, uint256 penalty, uint256 unlockAt)
func (_SyloTicketing *SyloTicketingCallerSession) Deposits(arg0 common.Address) (struct {
	Escrow   *big.Int
	Penalty  *big.Int
	UnlockAt *big.Int
}, error) {
	return _SyloTicketing.Contract.Deposits(&_SyloTicketing.CallOpts, arg0)
}

// GetRewardPoolClaimAmount is a free data retrieval call binding the contract method 0xc68264af.
//
// Solidity: function getRewardPoolClaimAmount(bytes32 epochId, address stakee) view returns(uint256)
func (_SyloTicketing *SyloTicketingCaller) GetRewardPoolClaimAmount(opts *bind.CallOpts, epochId [32]byte, stakee common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "getRewardPoolClaimAmount", epochId, stakee)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetRewardPoolClaimAmount is a free data retrieval call binding the contract method 0xc68264af.
//
// Solidity: function getRewardPoolClaimAmount(bytes32 epochId, address stakee) view returns(uint256)
func (_SyloTicketing *SyloTicketingSession) GetRewardPoolClaimAmount(epochId [32]byte, stakee common.Address) (*big.Int, error) {
	return _SyloTicketing.Contract.GetRewardPoolClaimAmount(&_SyloTicketing.CallOpts, epochId, stakee)
}

// GetRewardPoolClaimAmount is a free data retrieval call binding the contract method 0xc68264af.
//
// Solidity: function getRewardPoolClaimAmount(bytes32 epochId, address stakee) view returns(uint256)
func (_SyloTicketing *SyloTicketingCallerSession) GetRewardPoolClaimAmount(epochId [32]byte, stakee common.Address) (*big.Int, error) {
	return _SyloTicketing.Contract.GetRewardPoolClaimAmount(&_SyloTicketing.CallOpts, epochId, stakee)
}

// GetRewardPoolKey is a free data retrieval call binding the contract method 0x5d9c846e.
//
// Solidity: function getRewardPoolKey(bytes32 epochId, address stakee) pure returns(bytes32)
func (_SyloTicketing *SyloTicketingCaller) GetRewardPoolKey(opts *bind.CallOpts, epochId [32]byte, stakee common.Address) ([32]byte, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "getRewardPoolKey", epochId, stakee)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRewardPoolKey is a free data retrieval call binding the contract method 0x5d9c846e.
//
// Solidity: function getRewardPoolKey(bytes32 epochId, address stakee) pure returns(bytes32)
func (_SyloTicketing *SyloTicketingSession) GetRewardPoolKey(epochId [32]byte, stakee common.Address) ([32]byte, error) {
	return _SyloTicketing.Contract.GetRewardPoolKey(&_SyloTicketing.CallOpts, epochId, stakee)
}

// GetRewardPoolKey is a free data retrieval call binding the contract method 0x5d9c846e.
//
// Solidity: function getRewardPoolKey(bytes32 epochId, address stakee) pure returns(bytes32)
func (_SyloTicketing *SyloTicketingCallerSession) GetRewardPoolKey(epochId [32]byte, stakee common.Address) ([32]byte, error) {
	return _SyloTicketing.Contract.GetRewardPoolKey(&_SyloTicketing.CallOpts, epochId, stakee)
}

// GetRewardPoolTotalBalance is a free data retrieval call binding the contract method 0x844556ca.
//
// Solidity: function getRewardPoolTotalBalance(bytes32 epochId, address stakee) view returns(uint256)
func (_SyloTicketing *SyloTicketingCaller) GetRewardPoolTotalBalance(opts *bind.CallOpts, epochId [32]byte, stakee common.Address) (*big.Int, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "getRewardPoolTotalBalance", epochId, stakee)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetRewardPoolTotalBalance is a free data retrieval call binding the contract method 0x844556ca.
//
// Solidity: function getRewardPoolTotalBalance(bytes32 epochId, address stakee) view returns(uint256)
func (_SyloTicketing *SyloTicketingSession) GetRewardPoolTotalBalance(epochId [32]byte, stakee common.Address) (*big.Int, error) {
	return _SyloTicketing.Contract.GetRewardPoolTotalBalance(&_SyloTicketing.CallOpts, epochId, stakee)
}

// GetRewardPoolTotalBalance is a free data retrieval call binding the contract method 0x844556ca.
//
// Solidity: function getRewardPoolTotalBalance(bytes32 epochId, address stakee) view returns(uint256)
func (_SyloTicketing *SyloTicketingCallerSession) GetRewardPoolTotalBalance(epochId [32]byte, stakee common.Address) (*big.Int, error) {
	return _SyloTicketing.Contract.GetRewardPoolTotalBalance(&_SyloTicketing.CallOpts, epochId, stakee)
}

// GetTicketHash is a free data retrieval call binding the contract method 0xf137ef17.
//
// Solidity: function getTicketHash((bytes32,address,address,uint256,bytes32,bytes32) ticket) pure returns(bytes32)
func (_SyloTicketing *SyloTicketingCaller) GetTicketHash(opts *bind.CallOpts, ticket SyloTicketingTicket) ([32]byte, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "getTicketHash", ticket)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetTicketHash is a free data retrieval call binding the contract method 0xf137ef17.
//
// Solidity: function getTicketHash((bytes32,address,address,uint256,bytes32,bytes32) ticket) pure returns(bytes32)
func (_SyloTicketing *SyloTicketingSession) GetTicketHash(ticket SyloTicketingTicket) ([32]byte, error) {
	return _SyloTicketing.Contract.GetTicketHash(&_SyloTicketing.CallOpts, ticket)
}

// GetTicketHash is a free data retrieval call binding the contract method 0xf137ef17.
//
// Solidity: function getTicketHash((bytes32,address,address,uint256,bytes32,bytes32) ticket) pure returns(bytes32)
func (_SyloTicketing *SyloTicketingCallerSession) GetTicketHash(ticket SyloTicketingTicket) ([32]byte, error) {
	return _SyloTicketing.Contract.GetTicketHash(&_SyloTicketing.CallOpts, ticket)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SyloTicketing *SyloTicketingCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SyloTicketing *SyloTicketingSession) Owner() (common.Address, error) {
	return _SyloTicketing.Contract.Owner(&_SyloTicketing.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SyloTicketing *SyloTicketingCallerSession) Owner() (common.Address, error) {
	return _SyloTicketing.Contract.Owner(&_SyloTicketing.CallOpts)
}

// RewardPools is a free data retrieval call binding the contract method 0x2073de5c.
//
// Solidity: function rewardPools(bytes32 ) view returns(uint256 balance)
func (_SyloTicketing *SyloTicketingCaller) RewardPools(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "rewardPools", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RewardPools is a free data retrieval call binding the contract method 0x2073de5c.
//
// Solidity: function rewardPools(bytes32 ) view returns(uint256 balance)
func (_SyloTicketing *SyloTicketingSession) RewardPools(arg0 [32]byte) (*big.Int, error) {
	return _SyloTicketing.Contract.RewardPools(&_SyloTicketing.CallOpts, arg0)
}

// RewardPools is a free data retrieval call binding the contract method 0x2073de5c.
//
// Solidity: function rewardPools(bytes32 ) view returns(uint256 balance)
func (_SyloTicketing *SyloTicketingCallerSession) RewardPools(arg0 [32]byte) (*big.Int, error) {
	return _SyloTicketing.Contract.RewardPools(&_SyloTicketing.CallOpts, arg0)
}

// UnlockDuration is a free data retrieval call binding the contract method 0x8a1fcd60.
//
// Solidity: function unlockDuration() view returns(uint256)
func (_SyloTicketing *SyloTicketingCaller) UnlockDuration(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "unlockDuration")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UnlockDuration is a free data retrieval call binding the contract method 0x8a1fcd60.
//
// Solidity: function unlockDuration() view returns(uint256)
func (_SyloTicketing *SyloTicketingSession) UnlockDuration() (*big.Int, error) {
	return _SyloTicketing.Contract.UnlockDuration(&_SyloTicketing.CallOpts)
}

// UnlockDuration is a free data retrieval call binding the contract method 0x8a1fcd60.
//
// Solidity: function unlockDuration() view returns(uint256)
func (_SyloTicketing *SyloTicketingCallerSession) UnlockDuration() (*big.Int, error) {
	return _SyloTicketing.Contract.UnlockDuration(&_SyloTicketing.CallOpts)
}

// UsedTickets is a free data retrieval call binding the contract method 0x59a515ba.
//
// Solidity: function usedTickets(bytes32 ) view returns(bool)
func (_SyloTicketing *SyloTicketingCaller) UsedTickets(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _SyloTicketing.contract.Call(opts, &out, "usedTickets", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// UsedTickets is a free data retrieval call binding the contract method 0x59a515ba.
//
// Solidity: function usedTickets(bytes32 ) view returns(bool)
func (_SyloTicketing *SyloTicketingSession) UsedTickets(arg0 [32]byte) (bool, error) {
	return _SyloTicketing.Contract.UsedTickets(&_SyloTicketing.CallOpts, arg0)
}

// UsedTickets is a free data retrieval call binding the contract method 0x59a515ba.
//
// Solidity: function usedTickets(bytes32 ) view returns(bool)
func (_SyloTicketing *SyloTicketingCallerSession) UsedTickets(arg0 [32]byte) (bool, error) {
	return _SyloTicketing.Contract.UsedTickets(&_SyloTicketing.CallOpts, arg0)
}

// ClaimReward is a paid mutator transaction binding the contract method 0xf9d0ff06.
//
// Solidity: function claimReward(bytes32 epochId, address stakee) returns()
func (_SyloTicketing *SyloTicketingTransactor) ClaimReward(opts *bind.TransactOpts, epochId [32]byte, stakee common.Address) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "claimReward", epochId, stakee)
}

// ClaimReward is a paid mutator transaction binding the contract method 0xf9d0ff06.
//
// Solidity: function claimReward(bytes32 epochId, address stakee) returns()
func (_SyloTicketing *SyloTicketingSession) ClaimReward(epochId [32]byte, stakee common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.ClaimReward(&_SyloTicketing.TransactOpts, epochId, stakee)
}

// ClaimReward is a paid mutator transaction binding the contract method 0xf9d0ff06.
//
// Solidity: function claimReward(bytes32 epochId, address stakee) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) ClaimReward(epochId [32]byte, stakee common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.ClaimReward(&_SyloTicketing.TransactOpts, epochId, stakee)
}

// DepositEscrow is a paid mutator transaction binding the contract method 0x169e1ca8.
//
// Solidity: function depositEscrow(uint256 amount, address account) returns()
func (_SyloTicketing *SyloTicketingTransactor) DepositEscrow(opts *bind.TransactOpts, amount *big.Int, account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "depositEscrow", amount, account)
}

// DepositEscrow is a paid mutator transaction binding the contract method 0x169e1ca8.
//
// Solidity: function depositEscrow(uint256 amount, address account) returns()
func (_SyloTicketing *SyloTicketingSession) DepositEscrow(amount *big.Int, account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.DepositEscrow(&_SyloTicketing.TransactOpts, amount, account)
}

// DepositEscrow is a paid mutator transaction binding the contract method 0x169e1ca8.
//
// Solidity: function depositEscrow(uint256 amount, address account) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) DepositEscrow(amount *big.Int, account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.DepositEscrow(&_SyloTicketing.TransactOpts, amount, account)
}

// DepositPenalty is a paid mutator transaction binding the contract method 0xcdba7342.
//
// Solidity: function depositPenalty(uint256 amount, address account) returns()
func (_SyloTicketing *SyloTicketingTransactor) DepositPenalty(opts *bind.TransactOpts, amount *big.Int, account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "depositPenalty", amount, account)
}

// DepositPenalty is a paid mutator transaction binding the contract method 0xcdba7342.
//
// Solidity: function depositPenalty(uint256 amount, address account) returns()
func (_SyloTicketing *SyloTicketingSession) DepositPenalty(amount *big.Int, account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.DepositPenalty(&_SyloTicketing.TransactOpts, amount, account)
}

// DepositPenalty is a paid mutator transaction binding the contract method 0xcdba7342.
//
// Solidity: function depositPenalty(uint256 amount, address account) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) DepositPenalty(amount *big.Int, account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.DepositPenalty(&_SyloTicketing.TransactOpts, amount, account)
}

// Initialize is a paid mutator transaction binding the contract method 0xf7013ef6.
//
// Solidity: function initialize(address token, address listings, address directory, address epochsManager, uint256 _unlockDuration) returns()
func (_SyloTicketing *SyloTicketingTransactor) Initialize(opts *bind.TransactOpts, token common.Address, listings common.Address, directory common.Address, epochsManager common.Address, _unlockDuration *big.Int) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "initialize", token, listings, directory, epochsManager, _unlockDuration)
}

// Initialize is a paid mutator transaction binding the contract method 0xf7013ef6.
//
// Solidity: function initialize(address token, address listings, address directory, address epochsManager, uint256 _unlockDuration) returns()
func (_SyloTicketing *SyloTicketingSession) Initialize(token common.Address, listings common.Address, directory common.Address, epochsManager common.Address, _unlockDuration *big.Int) (*types.Transaction, error) {
	return _SyloTicketing.Contract.Initialize(&_SyloTicketing.TransactOpts, token, listings, directory, epochsManager, _unlockDuration)
}

// Initialize is a paid mutator transaction binding the contract method 0xf7013ef6.
//
// Solidity: function initialize(address token, address listings, address directory, address epochsManager, uint256 _unlockDuration) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) Initialize(token common.Address, listings common.Address, directory common.Address, epochsManager common.Address, _unlockDuration *big.Int) (*types.Transaction, error) {
	return _SyloTicketing.Contract.Initialize(&_SyloTicketing.TransactOpts, token, listings, directory, epochsManager, _unlockDuration)
}

// LockDeposits is a paid mutator transaction binding the contract method 0xd088a231.
//
// Solidity: function lockDeposits() returns()
func (_SyloTicketing *SyloTicketingTransactor) LockDeposits(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "lockDeposits")
}

// LockDeposits is a paid mutator transaction binding the contract method 0xd088a231.
//
// Solidity: function lockDeposits() returns()
func (_SyloTicketing *SyloTicketingSession) LockDeposits() (*types.Transaction, error) {
	return _SyloTicketing.Contract.LockDeposits(&_SyloTicketing.TransactOpts)
}

// LockDeposits is a paid mutator transaction binding the contract method 0xd088a231.
//
// Solidity: function lockDeposits() returns()
func (_SyloTicketing *SyloTicketingTransactorSession) LockDeposits() (*types.Transaction, error) {
	return _SyloTicketing.Contract.LockDeposits(&_SyloTicketing.TransactOpts)
}

// Redeem is a paid mutator transaction binding the contract method 0xda95b5c9.
//
// Solidity: function redeem((bytes32,address,address,uint256,bytes32,bytes32) ticket, uint256 senderRand, uint256 redeemerRand, bytes sig) returns()
func (_SyloTicketing *SyloTicketingTransactor) Redeem(opts *bind.TransactOpts, ticket SyloTicketingTicket, senderRand *big.Int, redeemerRand *big.Int, sig []byte) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "redeem", ticket, senderRand, redeemerRand, sig)
}

// Redeem is a paid mutator transaction binding the contract method 0xda95b5c9.
//
// Solidity: function redeem((bytes32,address,address,uint256,bytes32,bytes32) ticket, uint256 senderRand, uint256 redeemerRand, bytes sig) returns()
func (_SyloTicketing *SyloTicketingSession) Redeem(ticket SyloTicketingTicket, senderRand *big.Int, redeemerRand *big.Int, sig []byte) (*types.Transaction, error) {
	return _SyloTicketing.Contract.Redeem(&_SyloTicketing.TransactOpts, ticket, senderRand, redeemerRand, sig)
}

// Redeem is a paid mutator transaction binding the contract method 0xda95b5c9.
//
// Solidity: function redeem((bytes32,address,address,uint256,bytes32,bytes32) ticket, uint256 senderRand, uint256 redeemerRand, bytes sig) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) Redeem(ticket SyloTicketingTicket, senderRand *big.Int, redeemerRand *big.Int, sig []byte) (*types.Transaction, error) {
	return _SyloTicketing.Contract.Redeem(&_SyloTicketing.TransactOpts, ticket, senderRand, redeemerRand, sig)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SyloTicketing *SyloTicketingTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SyloTicketing *SyloTicketingSession) RenounceOwnership() (*types.Transaction, error) {
	return _SyloTicketing.Contract.RenounceOwnership(&_SyloTicketing.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SyloTicketing *SyloTicketingTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _SyloTicketing.Contract.RenounceOwnership(&_SyloTicketing.TransactOpts)
}

// SetUnlockDuration is a paid mutator transaction binding the contract method 0xdd900769.
//
// Solidity: function setUnlockDuration(uint256 newUnlockDuration) returns()
func (_SyloTicketing *SyloTicketingTransactor) SetUnlockDuration(opts *bind.TransactOpts, newUnlockDuration *big.Int) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "setUnlockDuration", newUnlockDuration)
}

// SetUnlockDuration is a paid mutator transaction binding the contract method 0xdd900769.
//
// Solidity: function setUnlockDuration(uint256 newUnlockDuration) returns()
func (_SyloTicketing *SyloTicketingSession) SetUnlockDuration(newUnlockDuration *big.Int) (*types.Transaction, error) {
	return _SyloTicketing.Contract.SetUnlockDuration(&_SyloTicketing.TransactOpts, newUnlockDuration)
}

// SetUnlockDuration is a paid mutator transaction binding the contract method 0xdd900769.
//
// Solidity: function setUnlockDuration(uint256 newUnlockDuration) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) SetUnlockDuration(newUnlockDuration *big.Int) (*types.Transaction, error) {
	return _SyloTicketing.Contract.SetUnlockDuration(&_SyloTicketing.TransactOpts, newUnlockDuration)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SyloTicketing *SyloTicketingTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SyloTicketing *SyloTicketingSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.TransferOwnership(&_SyloTicketing.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.TransferOwnership(&_SyloTicketing.TransactOpts, newOwner)
}

// UnlockDeposits is a paid mutator transaction binding the contract method 0x7d6babb4.
//
// Solidity: function unlockDeposits() returns(uint256)
func (_SyloTicketing *SyloTicketingTransactor) UnlockDeposits(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "unlockDeposits")
}

// UnlockDeposits is a paid mutator transaction binding the contract method 0x7d6babb4.
//
// Solidity: function unlockDeposits() returns(uint256)
func (_SyloTicketing *SyloTicketingSession) UnlockDeposits() (*types.Transaction, error) {
	return _SyloTicketing.Contract.UnlockDeposits(&_SyloTicketing.TransactOpts)
}

// UnlockDeposits is a paid mutator transaction binding the contract method 0x7d6babb4.
//
// Solidity: function unlockDeposits() returns(uint256)
func (_SyloTicketing *SyloTicketingTransactorSession) UnlockDeposits() (*types.Transaction, error) {
	return _SyloTicketing.Contract.UnlockDeposits(&_SyloTicketing.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_SyloTicketing *SyloTicketingTransactor) Withdraw(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "withdraw")
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_SyloTicketing *SyloTicketingSession) Withdraw() (*types.Transaction, error) {
	return _SyloTicketing.Contract.Withdraw(&_SyloTicketing.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_SyloTicketing *SyloTicketingTransactorSession) Withdraw() (*types.Transaction, error) {
	return _SyloTicketing.Contract.Withdraw(&_SyloTicketing.TransactOpts)
}

// WithdrawTo is a paid mutator transaction binding the contract method 0x72b0d90c.
//
// Solidity: function withdrawTo(address account) returns()
func (_SyloTicketing *SyloTicketingTransactor) WithdrawTo(opts *bind.TransactOpts, account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.contract.Transact(opts, "withdrawTo", account)
}

// WithdrawTo is a paid mutator transaction binding the contract method 0x72b0d90c.
//
// Solidity: function withdrawTo(address account) returns()
func (_SyloTicketing *SyloTicketingSession) WithdrawTo(account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.WithdrawTo(&_SyloTicketing.TransactOpts, account)
}

// WithdrawTo is a paid mutator transaction binding the contract method 0x72b0d90c.
//
// Solidity: function withdrawTo(address account) returns()
func (_SyloTicketing *SyloTicketingTransactorSession) WithdrawTo(account common.Address) (*types.Transaction, error) {
	return _SyloTicketing.Contract.WithdrawTo(&_SyloTicketing.TransactOpts, account)
}

// SyloTicketingOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the SyloTicketing contract.
type SyloTicketingOwnershipTransferredIterator struct {
	Event *SyloTicketingOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SyloTicketingOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SyloTicketingOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SyloTicketingOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SyloTicketingOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SyloTicketingOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SyloTicketingOwnershipTransferred represents a OwnershipTransferred event raised by the SyloTicketing contract.
type SyloTicketingOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SyloTicketing *SyloTicketingFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*SyloTicketingOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _SyloTicketing.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &SyloTicketingOwnershipTransferredIterator{contract: _SyloTicketing.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SyloTicketing *SyloTicketingFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *SyloTicketingOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _SyloTicketing.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SyloTicketingOwnershipTransferred)
				if err := _SyloTicketing.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SyloTicketing *SyloTicketingFilterer) ParseOwnershipTransferred(log types.Log) (*SyloTicketingOwnershipTransferred, error) {
	event := new(SyloTicketingOwnershipTransferred)
	if err := _SyloTicketing.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
